{
  "_args": [
    [
      {
        "raw": "expo-localization@~2.0.0",
        "scope": null,
        "escapedName": "expo-localization",
        "name": "expo-localization",
        "rawSpec": "~2.0.0",
        "spec": ">=2.0.0 <2.1.0",
        "type": "range"
      },
      "/GCD/Year 4/SDP/RN/MLFoodApp/node_modules/expo"
    ]
  ],
  "_from": "expo-localization@~2.0.0",
  "_hasShrinkwrap": false,
  "_id": "expo-localization@2.0.0",
  "_location": "/expo-localization",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/expo-localization_2.0.0_1546598643606_0.33303575023923826"
  },
  "_npmUser": {
    "name": "sjchmiela",
    "email": "sjchmiela@gmail.com"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "expo-localization@~2.0.0",
    "scope": null,
    "escapedName": "expo-localization",
    "name": "expo-localization",
    "rawSpec": "~2.0.0",
    "spec": ">=2.0.0 <2.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/expo"
  ],
  "_resolved": "https://registry.npmjs.org/expo-localization/-/expo-localization-2.0.0.tgz",
  "_shasum": "d7b9b44585d5bb70691c6b62ebde6b00d8535a0e",
  "_shrinkwrap": null,
  "_spec": "expo-localization@~2.0.0",
  "_where": "/GCD/Year 4/SDP/RN/MLFoodApp/node_modules/expo",
  "author": {
    "name": "650 Industries, Inc."
  },
  "contributors": [
    {
      "name": "Evan Bacon",
      "email": "bacon@expo.io",
      "url": "https://github.com/evanbacon"
    }
  ],
  "dependencies": {
    "expo-core": "~2.0.0",
    "moment": "^2.22.2",
    "moment-timezone": "^0.5.23",
    "rtl-detect": "^1.0.2"
  },
  "description": "Expo Unimodule for interfacing with the native localization APIs",
  "devDependencies": {
    "flow-bin": "^0.77.0"
  },
  "directories": {},
  "dist": {
    "shasum": "d7b9b44585d5bb70691c6b62ebde6b00d8535a0e",
    "integrity": "sha512-QDs76ZWi8zf/Zbt9EG/ToQ8qQv3Z8GsjPVFT3J0idikpuMIPhqKSZLYOkiXpTuOhh5I1CGfIiXCqkQX77n8l7A==",
    "tarball": "https://registry.npmjs.org/expo-localization/-/expo-localization-2.0.0.tgz",
    "fileCount": 13,
    "unpackedSize": 15239,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcLzj0CRA9TVsSAnZWagAAwY4P/2ijEwhPwz7N0LjJiRNt\ngpJwmZtMbUSVRlCTQovi9HpAMiqWuSFINb+AdTeCFV+HbQ8Tjx1YLpFyzzOb\nVnjNZNDpoqY2ywKgvFIs74EU7iCKud6xpqdHIY8y27OSLNTDcUkJbui3lFH6\nWkfEy/pS1+aFecIXDbqRqMtQHxcmHCfRy5fUMByNr6oI4CzDQRTcdZkOocGZ\nUy2el9/Jr8MsWcD0MWnRu0/U0/jhOZk+Z6eQ7tjLiR1oE63Heehwn8UtIfmp\nfXdvWlmEsjNDcjNlpMjT1WZ4ewASiVdm+GPLElyrEtx6GAxnAK3L3hZg0t1G\n7eY6VoNyfKykBFc0EUbUle9oJITiRNWCKmgSjzK5eCYHKYhPx2hixoRvfZNe\ntVt4J5bXciuGy9juBm/cuc362APQA6qQKC9CmrlpvcquPUtqXrbU6FY1Z7pN\nP3ShfNePyFZyVpM7POC7ca+L7J4LWo7Wd5xY5cESO8GDYseVxqIwCZ/Ctgpu\n2+UfWCAxmUSSSaNI174AA5HbGCDKsUPpo46iBY0w/XmaQeagxjxJoJGVDbsJ\nxVs39Wf0ymxtaZe6DQQqT5yHA/fRKUz4kw5RafHiJxZcJxmaPiK2shumI0LE\nqa8QKf9OFe00ASaADn/NsbjfaeS9hG1Qws49pSHOKNSeeOKVNRg/0ufOWNIQ\nnSZO\r\n=RQYb\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "f15abc53c111bd0438cd36dc456c59cfa7c56a58",
  "homepage": "https://docs.expo.io/",
  "keywords": [
    "react-native",
    "expo"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "barthec",
      "email": "bartlomiejbukowski.b@gmail.com"
    },
    {
      "name": "brentvatne",
      "email": "brentvatne@gmail.com"
    },
    {
      "name": "ccheever",
      "email": "ccheever@gmail.com"
    },
    {
      "name": "dsokal",
      "email": "dominiksokal@gmail.com"
    },
    {
      "name": "esamelson",
      "email": "eric@expo.io"
    },
    {
      "name": "evanbacon",
      "email": "baconbrix@gmail.com"
    },
    {
      "name": "expoadmin",
      "email": "support@expo.io"
    },
    {
      "name": "fson",
      "email": "ville.immonen@iki.fi"
    },
    {
      "name": "ide",
      "email": "ide+npm@jameside.com"
    },
    {
      "name": "jakubste",
      "email": "jakub.ste@gmail.com"
    },
    {
      "name": "jesseruder",
      "email": "jesseruder@gmail.com"
    },
    {
      "name": "nikki93",
      "email": "s.nikhilesh@gmail.com"
    },
    {
      "name": "quinlanj",
      "email": "quinlanjung@gmail.com"
    },
    {
      "name": "sjchmiela",
      "email": "sjchmiela@gmail.com"
    },
    {
      "name": "terribleben",
      "email": "ben@exp.host"
    },
    {
      "name": "tsapeta",
      "email": "sapeta.tomasz@gmail.com"
    }
  ],
  "name": "expo-localization",
  "optionalDependencies": {},
  "readme": "# expo-localization\n\n`expo-localization` enables you to interface with the native device locale.\n\n## Installation\n\nNow, you need to install the package from `npm` registry.\n\n`npm install expo-localization` or `yarn add expo-localization`\n\n#### iOS (Cocoapods)\n\nIf you're using Cocoapods, add the dependency to your `Podfile`:\n\n```ruby\npod 'EXLocalization', path: '../node_modules/expo-localization/ios'\n```\n\nand if not already included\n\n```ruby\npod 'EXCore', path: '../node_modules/expo-core/ios'\n```\n\nand run `pod install`.\n\n#### Android\n\n1.  Append the following lines to `android/settings.gradle`:\n\n    ```gradle\n    include ':expo-localization'\n    project(':expo-localization').projectDir = new File(rootProject.projectDir, '../node_modules/expo-localization/android')\n    ```\n\n    and if not already included\n\n    ```gradle\n    include ':expo-core'\n    project(':expo-core').projectDir = new File(rootProject.projectDir, '../node_modules/expo-core/android')\n    ```\n\n2.  Insert the following lines inside the dependencies block in `android/app/build.gradle`:\n    ```gradle\n    api project(':expo-localization')\n    ```\n    and if not already included\n    ```gradle\n    api project(':expo-core')\n    ```\n\nSome Unimodules are not included in the default `ExpoKit` suite, these modules will needed to be added manually.\nIf your Android build cannot find the Native Modules, you can add them like this:\n\n`./android/app/src/main/java/host/exp/exponent/MainActivity.java`\n\n```java\n@Override\npublic List<Package> expoPackages() {\n  // Here you can add your own packages.\n  return Arrays.<Package>asList(\n    new LocalizationPackage() // Include this.\n  );\n}\n```\n\n## Usage\n\n```javascript\nimport React from 'react';\nimport { Text } from 'react-native';\nimport { Localization } from 'expo-localization';\n\nimport i18n from 'i18n-js';\n\nconst en = {\n  foo: 'Foo',\n  bar: 'Bar {{someValue}}',\n};\n\nconst fr = {\n  foo: 'como telle fous',\n  bar: 'chatouiller {{someValue}}',\n};\n\ni18n.fallbacks = true;\ni18n.translations = { fr, en };\ni18n.locale = Localization.locale;\n\nexport default class LitView extends React.Component {\n  componentWillMount() {\n    this._subscription = Localization.addListener(({ locale }) => {\n      i18n.locale = locale;\n    });\n  }\n\n  componentWillUnmount() {\n    if (!!this._subscription) {\n      this._subscription.remove();\n    }\n  }\n\n  render() {\n    return (\n      <Text>\n        {i18n.t('foo')} {i18n.t('bar', { someValue: Date.now() })}\n      </Text>\n    );\n  }\n}\n```\n\n## API\n\n### Constants\n\nThis API is mostly synchronous and driven by constants.\n\n#### `Localization.locale: string`\n\nNative device language, returned in standard format. ex: `en-US`, `es-US`.\n\n#### `Localization.locales: Array<string>`\n\nList of all the native languages provided by the user settings. These are returned in the order the user defines in their native settings.\n\n#### `Localization.country: ?string`\n\nCountry code for your device.\n\n#### `Localization.isoCurrencyCodes: ?Array<string>`\n\nA list of all the supported ISO codes.\n\n#### `Localization.timezone: string`\n\nThe current time zone in display format. ex: `America/Los_Angeles`\n\n#### `Localization.isRTL: boolean`\n\nThis will return `true` if the current language is Right-to-Left.\n\n### Methods\n\n> Callbacks are Android only, changing the native locale on iOS will cause all the apps to reset.\n\n#### `Localization.addListener(listener: Listener): ?Subscription`\n\nObserve when a language is added or moved in the Android settings.\n\n#### `Localization.removeAllListeners(): void`\n\nClear all language observers.\n\n#### `Localization.removeSubscription(subscription: Subscription): void`\n\nStop observing when the native languages are edited.\n",
  "readmeFilename": "README.md",
  "version": "2.0.0"
}
